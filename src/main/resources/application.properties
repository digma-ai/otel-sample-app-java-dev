# Server Port
server.port=9753

# database init, supports mysql too
database=h2
spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

# FlaskDb
spring.data.flaskdb.uri=http://localhost:27017/feedbacks

# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*

# Logging
logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h

# OpenTelemetry Configuration
otel.service.name=${OTEL_SERVICE_NAME:petclinic}
otel.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
otel.traces.sampler=${OTEL_TRACES_SAMPLER:parentbased_always_on}
otel.traces.sampler.arg=${OTEL_TRACES_SAMPLER_ARG:1.0}
otel.metric.export.interval=${OTEL_METRIC_EXPORT_INTERVAL:60000}
otel.propagators=${OTEL_PROPAGATORS:tracecontext,baggage}
otel.resource.attributes=${OTEL_RESOURCE_ATTRIBUTES:service.namespace=petclinic,service.instance.id=${random.uuid}}