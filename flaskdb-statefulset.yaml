# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: petclinic
    meta.helm.sh/release-namespace: pet-agentic-dev
  creationTimestamp: "2025-08-11T14:43:35Z"
  generation: 2
  labels:
    app.kubernetes.io/component: petclinic-flaskdb
  name: petclinic-flaskdb
  namespace: pet-agentic-dev
  resourceVersion: "168531759"
  uid: 9afe42b9-5e54-456f-8d1d-c361cf6facc6
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: petclinic-flaskdb
  serviceName: petclinic-flaskdb
  template:    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: petclinic-flaskdb
    spec:
      containers:
      - args:
        - |
          pip install flask &&
          python /app/app.py
        command:
        - /bin/sh
        - -c
        env:
        - name: DATA_DIR
           value: /data/db
        image: python:3.11-slim
        imagePullPolicy: IfNotPresent
        name: flask-container
        ports:
        - containerPort: 27017
          protocol: TCP
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app
          name: flask-source
        - mountPath: /data/db
          name: flaskdb-data      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: flask-app-config
        name: flask-source
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: flaskdb-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem


